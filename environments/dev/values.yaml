apiVersion: v1
kind: ConfigMap
metadata:
  name: f1-data-platform-config
  namespace: f1-dev
  labels:
    app: f1-data-platform
    environment: dev
data:
  ENVIRONMENT: "dev"
  CLOUD_PROVIDER: "aws"
  AWS_REGION: "us-east-1"
  LOG_LEVEL: "DEBUG"
  DATA_LAKE_BUCKET: "f1-data-lake-dev"
  
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: f1-data-platform
  namespace: f1-dev
  labels:
    app: f1-data-platform
    environment: dev
spec:
  replicas: 1
  selector:
    matchLabels:
      app: f1-data-platform
  template:
    metadata:
      labels:
        app: f1-data-platform
        environment: dev
    spec:
      containers:
      - name: f1-data-platform
        image: ${DOCKER_REGISTRY}/f1-data-platform:${BUILD_VERSION}
        imagePullPolicy: Always
        ports:
        - containerPort: 8000
        env:
        - name: ENVIRONMENT
          valueFrom:
            configMapKeyRef:
              name: f1-data-platform-config
              key: ENVIRONMENT
        - name: CLOUD_PROVIDER
          valueFrom:
            configMapKeyRef:
              name: f1-data-platform-config
              key: CLOUD_PROVIDER
        - name: AWS_REGION
          valueFrom:
            configMapKeyRef:
              name: f1-data-platform-config
              key: AWS_REGION
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /ready
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5

---
apiVersion: v1
kind: Service
metadata:
  name: f1-data-platform-service
  namespace: f1-dev
  labels:
    app: f1-data-platform
spec:
  selector:
    app: f1-data-platform
  ports:
  - port: 80
    targetPort: 8000
    protocol: TCP
  type: ClusterIP